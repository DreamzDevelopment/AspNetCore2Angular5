{"version":3,"sources":["extensions/FormatterExtension.min.js"],"names":["FormatFor","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","verb","n","v","op","f","TypeError","_","y","t","call","label","ops","pop","trys","length","push","g","sent","throw","return","Symbol","iterator","FormatterExtension","ResolvedNumber","val","callBackFunc","_a","_b","Locale","replace","BanglaNumber","indexOf","error","console","log","FormatCurrency","_this","response","obj","parseFloat","MyCurrencyList","GetCurrency","Currency","postfix","Formatter","format","symbol","toString","FormatPercent","Number","Default","ToLocalDateTime","FormatterDate","Date","FormatNumber","element","formatFor","options","formatter","_c","_d","_e","_f","_g","Intl","NumberFormat","bind","Object","assign","ExtractOptions","concat","Text","$","text","Value","Title","attr","title","All","FormatPhone","values","i","ch","EnglishNumber","join","prototype","optionString","data","JSON","parse","style","minimumFractionDigits","maximumFractionDigits","minimumIntegerDigits","FormatterInt","FormatterTime","DateTimeFormat","formatMatcher","hour12","year","month","day","hour","minute","second"],"mappings":"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","file":"FormatterExtension.min.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar FormatFor;\n(function (FormatFor) {\n    FormatFor[FormatFor[\"All\"] = 0] = \"All\";\n    FormatFor[FormatFor[\"Text\"] = 1] = \"Text\";\n    FormatFor[FormatFor[\"Value\"] = 2] = \"Value\";\n    FormatFor[FormatFor[\"Title\"] = 3] = \"Title\";\n})(FormatFor || (FormatFor = {}));\nvar FormatterExtension = (function () {\n    function FormatterExtension() {\n    }\n    FormatterExtension.ResolvedNumber = function (val, callBackFunc) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = FormatterExtension.Locale;\n                        switch (_a) {\n                            case 'bn-BD': return [3, 1];\n                        }\n                        return [3, 3];\n                    case 1:\n                        try {\n                            val = val.replace(/[০১২৩৪৫৬৭৮৯]/gi, function (e) {\n                                if (FormatterExtension.BanglaNumber.indexOf(e)) {\n                                    return FormatterExtension.BanglaNumber.indexOf(e);\n                                }\n                                else {\n                                    return e;\n                                }\n                            });\n                        }\n                        catch (error) {\n                            console.log(\"Translating: after:error\", error);\n                        }\n                        return [4, callBackFunc(val)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3: return [4, callBackFunc(val)];\n                    case 4:\n                        _b.sent();\n                        _b.label = 5;\n                    case 5: return [2];\n                }\n            });\n        });\n    };\n    FormatterExtension.FormatCurrency = function (val, callBackFunc) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var value;\n            return __generator(this, function (_a) {\n                value = '0';\n                return [2, FormatterExtension.ResolvedNumber(val, function (response) { return __awaiter(_this, void 0, void 0, function () {\n                        var obj;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    if (!response) return [3, 4];\n                                    value = response;\n                                    value = value.replace(/[^[0-9.]/g, '');\n                                    if (value) {\n                                        try {\n                                            value = parseFloat(value);\n                                        }\n                                        catch (error) {\n                                            console.log(\"Parse Float Error:\", error);\n                                        }\n                                    }\n                                    else {\n                                        value = 0.0;\n                                    }\n                                    return [4, MyCurrencyList.GetCurrency(FormatterExtension.Currency)];\n                                case 1:\n                                    obj = _a.sent();\n                                    if (!obj) return [3, 3];\n                                    value = ((obj.postfix == true) ? (FormatterExtension.Formatter.format(value) + obj.symbol) : (obj.symbol + FormatterExtension.Formatter.format(value)));\n                                    return [4, callBackFunc(value.toString())];\n                                case 2:\n                                    _a.sent();\n                                    _a.label = 3;\n                                case 3: return [3, 6];\n                                case 4: return [4, callBackFunc(FormatterExtension.Formatter.format(value).toString())];\n                                case 5:\n                                    _a.sent();\n                                    _a.label = 6;\n                                case 6: return [2];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    FormatterExtension.FormatPercent = function (val, callBackFunc) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var value;\n            return __generator(this, function (_a) {\n                value = '0';\n                return [2, FormatterExtension.ResolvedNumber(val, function (response) { return __awaiter(_this, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    if (!response) return [3, 2];\n                                    value = response;\n                                    value = value.replace(/[^[0-9.]/g, '');\n                                    if (value) {\n                                        try {\n                                            value = Number(value);\n                                        }\n                                        catch (error) {\n                                            console.log(\"Parse Number Error: \", error);\n                                        }\n                                    }\n                                    else {\n                                        value = 0;\n                                    }\n                                    value = FormatterExtension.Default.format(value);\n                                    return [4, callBackFunc(value.toString() + '%')];\n                                case 1:\n                                    _a.sent();\n                                    return [3, 4];\n                                case 2: return [4, callBackFunc(FormatterExtension.Default.format(value).toString() + '%')];\n                                case 3:\n                                    _a.sent();\n                                    _a.label = 4;\n                                case 4: return [2];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    FormatterExtension.ToLocalDateTime = function (val) {\n        return FormatterExtension.FormatterDate.format(new Date(val));\n    };\n    FormatterExtension.FormatNumber = function (element, formatFor, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var formatter, _a, _b, _c, _d, _e, _f, value;\n            return __generator(this, function (_g) {\n                switch (_g.label) {\n                    case 0:\n                        _b = (_a = Intl.NumberFormat).bind;\n                        _c = [void 0, FormatterExtension.Locale];\n                        _e = (_d = Object).assign;\n                        _f = [options];\n                        return [4, FormatterExtension.ExtractOptions(element)];\n                    case 1:\n                        formatter = new (_b.apply(_a, _c.concat([_e.apply(_d, _f.concat([_g.sent()]))])))();\n                        value = '';\n                        switch (formatFor) {\n                            case FormatFor.Text:\n                                value = $(element).text();\n                                $(element).text(formatter.format(+value));\n                                break;\n                            case FormatFor.Value:\n                                value = $(element).val();\n                                $(element).val(formatter.format(+value));\n                                break;\n                            case FormatFor.Title:\n                                value = $(element).attr('title');\n                                $(element).attr({ 'title': formatter.format(+value) });\n                                break;\n                            case FormatFor.All:\n                            default:\n                                value = $(element).attr('title');\n                                $(element).attr({ 'title': formatter.format(+value) });\n                                value = $(element).val();\n                                $(element).val(formatter.format(+value));\n                                value = $(element).text();\n                                $(element).text(formatter.format(+value));\n                                break;\n                        }\n                        return [2];\n                }\n            });\n        });\n    };\n    FormatterExtension.FormatPhone = function (element, formatFor, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var formatter, _a, _b, _c, _d, _e, _f, value, values, i, ch, i, ch, i, ch, i, ch, i, ch, i, ch;\n            return __generator(this, function (_g) {\n                switch (_g.label) {\n                    case 0:\n                        _b = (_a = Intl.NumberFormat).bind;\n                        _c = [void 0, FormatterExtension.Locale];\n                        _e = (_d = Object).assign;\n                        _f = [options];\n                        return [4, FormatterExtension.ExtractOptions(element)];\n                    case 1:\n                        formatter = new (_b.apply(_a, _c.concat([_e.apply(_d, _f.concat([_g.sent()]))])))();\n                        value = '';\n                        values = [];\n                        switch (formatFor) {\n                            case FormatFor.Text:\n                                value = $(element).text();\n                                for (i = 0; i < value.length; i++) {\n                                    ch = value[i];\n                                    if (FormatterExtension.EnglishNumber.indexOf(ch) >= 0) {\n                                        values.push(formatter.format(+ch));\n                                    }\n                                    else {\n                                        values.push(ch);\n                                    }\n                                }\n                                $(element).text(values.join(''));\n                                break;\n                            case FormatFor.Value:\n                                value = $(element).val();\n                                for (i = 0; i < value.length; i++) {\n                                    ch = value[i];\n                                    if (FormatterExtension.EnglishNumber.indexOf(ch) >= 0) {\n                                        values.push(formatter.format(+ch));\n                                    }\n                                    else {\n                                        values.push(ch);\n                                    }\n                                }\n                                $(element).val(values.join(''));\n                                break;\n                            case FormatFor.Title:\n                                value = $(element).attr('title');\n                                for (i = 0; i < value.length; i++) {\n                                    ch = value[i];\n                                    if (FormatterExtension.EnglishNumber.indexOf(ch) >= 0) {\n                                        values.push(formatter.format(+ch));\n                                    }\n                                    else {\n                                        values.push(ch);\n                                    }\n                                }\n                                $(element).attr({ 'title': values.join('') });\n                                break;\n                            case FormatFor.All:\n                            default:\n                                value = $(element).attr('title');\n                                values = [];\n                                for (i = 0; i < value.length; i++) {\n                                    ch = value[i];\n                                    if (FormatterExtension.EnglishNumber.indexOf(ch) >= 0) {\n                                        values.push(formatter.format(+ch));\n                                    }\n                                    else {\n                                        values.push(ch);\n                                    }\n                                }\n                                $(element).attr({ 'title': values.join('') });\n                                value = $(element).val();\n                                values = [];\n                                for (i = 0; i < value.length; i++) {\n                                    ch = value[i];\n                                    if (FormatterExtension.EnglishNumber.indexOf(ch) >= 0) {\n                                        values.push(formatter.format(+ch));\n                                    }\n                                    else {\n                                        values.push(ch);\n                                    }\n                                }\n                                $(element).val(values.join(''));\n                                value = $(element).text();\n                                values = [];\n                                for (i = 0; i < value.length; i++) {\n                                    ch = value[i];\n                                    if (FormatterExtension.EnglishNumber.indexOf(ch) >= 0) {\n                                        values.push(formatter.format(+ch));\n                                    }\n                                    else {\n                                        values.push(ch);\n                                    }\n                                }\n                                $(element).text(values.join(''));\n                                break;\n                        }\n                        return [2];\n                }\n            });\n        });\n    };\n    FormatterExtension.prototype.ExtractOptions = function (element) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, FormatterExtension.ExtractOptions(element)];\n                    case 1: return [2, _a.sent()];\n                }\n            });\n        });\n    };\n    FormatterExtension.ExtractOptions = function (element) {\n        return __awaiter(this, void 0, void 0, function () {\n            var options, optionString;\n            return __generator(this, function (_a) {\n                optionString = $(element).data('options') || '';\n                optionString = optionString && optionString.toString().replace(/\\'/g, '\\\"');\n                if (optionString && optionString.length > 2) {\n                    try {\n                        options = JSON.parse(optionString);\n                        return [2, options];\n                    }\n                    catch (e) {\n                        console.log(e);\n                        return [2, options];\n                    }\n                }\n                else {\n                    return [2, options];\n                }\n                return [2];\n            });\n        });\n    };\n    FormatterExtension.Locale = $('#selectLanguage select').val();\n    FormatterExtension.Currency = 'BDT';\n    FormatterExtension.EnglishNumber = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n    FormatterExtension.BanglaNumber = ['০', '১', '২', '৩', '৪', '৫', '৬', '৭', '৮', '৯'];\n    FormatterExtension.Default = new Intl.NumberFormat(FormatterExtension.Locale);\n    FormatterExtension.Formatter = new Intl.NumberFormat(FormatterExtension.Locale, {\n        style: 'decimal', minimumFractionDigits: 2, maximumFractionDigits: 2, minimumIntegerDigits: 2\n    });\n    FormatterExtension.FormatterInt = new Intl.NumberFormat(FormatterExtension.Locale, {\n        style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0, minimumIntegerDigits: 1,\n    });\n    FormatterExtension.FormatterTime = new Intl.NumberFormat(FormatterExtension.Locale, {\n        style: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0, minimumIntegerDigits: 2\n    });\n    FormatterExtension.FormatterDate = new Intl.DateTimeFormat(FormatterExtension.Locale, {\n        formatMatcher: 'basic', hour12: true, year: \"numeric\", month: \"2-digit\", day: \"2-digit\",\n        hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\"\n    });\n    return FormatterExtension;\n}());\n"]}