{"version":3,"sources":["extensions/FriendlyUrlExtension.min.js"],"names":["FriendlyUrlExtension","GetFriendlyTitle","title","_remapToAscii","_maxlength","_alphaCharOnly","_toLower","options","c","remapToAscii","maxlength","alphaCharOnly","undefined","toLower","rawAsArray","rawAsString","length","trim","prevdash","stringBuilder","i","push","String","fromCharCode","charCodeAt","toString","previousLength","RemapInternationalCharToAscii","join","substring","GetOriginalTitle","friendlyTitle","replace","GetTitleCase","str","tokens","split","token","toUpperCase","toLowerCase","GetCamelCase","camelStr","character","s","search"],"mappings":"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","file":"FriendlyUrlExtension.min.js","sourcesContent":["\"use strict\";\nvar FriendlyUrlExtension = (function () {\n    function FriendlyUrlExtension() {\n    }\n    FriendlyUrlExtension.GetFriendlyTitle = function (title, _remapToAscii, _maxlength, _alphaCharOnly, _toLower, options) {\n        if (_remapToAscii === void 0) { _remapToAscii = true; }\n        if (_toLower === void 0) { _toLower = true; }\n        if (!title) {\n            return '';\n        }\n        var remapToAscii = _remapToAscii || (options && options.remapToAscii) || true;\n        var maxlength = _maxlength || (options && options.alphaCharOnly) || undefined;\n        var alphaCharOnly = _alphaCharOnly || (options && options) || undefined;\n        var toLower = _toLower || (options && options.toLower) || true;\n        var rawAsArray = options && options.rawAsArray || undefined;\n        var rawAsString = options && options.rawAsString || undefined;\n        title = (!rawAsArray && !rawAsString) ? title.trim() : title;\n        var length = title.length;\n        var prevdash = false;\n        var stringBuilder = [];\n        var c;\n        for (var i = 0; i < length; ++i) {\n            c = title[i];\n            if ((c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')) {\n                stringBuilder.push(c);\n                prevdash = false;\n            }\n            else if (c >= 'A' && c <= 'Z') {\n                if (toLower) {\n                    stringBuilder.push(String.fromCharCode(c.charCodeAt(0) | 32));\n                }\n                else {\n                    stringBuilder.push(c);\n                }\n                prevdash = false;\n            }\n            else if ((c == ' ') || (c == ',') || (c == '.') || (c == '/') || (c == '\\\\') || (c == '-') || (c == '_') || (c == '=')) {\n                if (!prevdash && (stringBuilder.toString().length > 0)) {\n                    stringBuilder.push('-');\n                    prevdash = true;\n                }\n            }\n            else if (!(alphaCharOnly) && (c.charCodeAt(0) >= 128)) {\n                var previousLength = stringBuilder.toString().length;\n                if (remapToAscii) {\n                    stringBuilder.push(FriendlyUrlExtension.RemapInternationalCharToAscii(c));\n                }\n                else {\n                    stringBuilder.push(c);\n                }\n                if (previousLength != stringBuilder.toString().length) {\n                    prevdash = false;\n                }\n            }\n            if (i == maxlength) {\n                break;\n            }\n        }\n        if (prevdash) {\n            return stringBuilder.join('').toString().substring(0, stringBuilder.toString().length - 1);\n        }\n        else {\n            return stringBuilder.join('').toString();\n        }\n    };\n    FriendlyUrlExtension.GetOriginalTitle = function (friendlyTitle) {\n        if (!friendlyTitle) {\n            return '';\n        }\n        return friendlyTitle.replace(/-/gi, ' ');\n    };\n    FriendlyUrlExtension.GetTitleCase = function (str) {\n        var tokens = str.split(' ');\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (token.trim()) {\n                tokens[i] = token.substring(0, 1).toUpperCase() + token.substring(1).toLowerCase();\n            }\n        }\n        return tokens.join(' ');\n    };\n    FriendlyUrlExtension.GetCamelCase = function (str, trim) {\n        if (trim === void 0) { trim = false; }\n        var camelStr = '';\n        var prevdash = false;\n        for (var i = 0; i < str.length; i++) {\n            var c = str[i];\n            if (c == ' ') {\n                if (prevdash == true && trim) {\n                    c = '';\n                }\n                prevdash = true;\n            }\n            camelStr += (c && (prevdash || (c >= 'A' && c <= 'Z'))) ? (i == 0) ? c.toLowerCase() : c.toUpperCase() : c.toLowerCase();\n        }\n        return camelStr;\n    };\n    FriendlyUrlExtension.RemapInternationalCharToAscii = function (character) {\n        var s = character.toString().toLowerCase();\n        if (\"àåáâäãåąā\".search(s) >= 0) {\n            return \"a\";\n        }\n        else if (\"èéêëę\".search(s) >= 0) {\n            return \"e\";\n        }\n        else if (\"ìíîïı\".search(s) >= 0) {\n            return \"i\";\n        }\n        else if (\"òóôõöøőð\".search(s) >= 0) {\n            return \"o\";\n        }\n        else if (\"ùúûüŭů\".search(s) >= 0) {\n            return \"u\";\n        }\n        else if (\"çćčĉ\".search(s) >= 0) {\n            return \"c\";\n        }\n        else if (\"żźž\".search(s) >= 0) {\n            return \"z\";\n        }\n        else if (\"śşšŝ\".search(s) >= 0) {\n            return \"s\";\n        }\n        else if (\"ñń\".search(s) >= 0) {\n            return \"n\";\n        }\n        else if (\"ýÿ\".search(s) >= 0) {\n            return \"y\";\n        }\n        else if (\"ğĝ\".search(s) >= 0) {\n            return \"g\";\n        }\n        else if (character == 'ř') {\n            return \"r\";\n        }\n        else if (character == 'ł') {\n            return \"l\";\n        }\n        else if (character == 'đ') {\n            return \"d\";\n        }\n        else if (character == 'ß') {\n            return \"ss\";\n        }\n        else if (character == 'Þ') {\n            return \"th\";\n        }\n        else if (character == 'ĥ') {\n            return \"h\";\n        }\n        else if (character == 'ĵ') {\n            return \"j\";\n        }\n        else {\n            return '';\n        }\n    };\n    return FriendlyUrlExtension;\n}());\n"]}